#include <iostream>
#include <cmath>

#include "AngularDistribution.hh"

using std::cout;
using std::endl;

// PI/(180 DEGREE_TO_RAD)
#define DEGREE_TO_RAD 0.017453292519943295

double AngularDistribution::AngDist(
    double theta, double phi, double *st,
    int nst, double *mix) const {

	if (nst == 3) {
		// 0.1^+ -> 0.1^+ -> 0.1^+
		// Wildcard for test distributions
		if (st[0] == 0.1 && st[1] == 0.1 && st[2] == 0.1) {
			if (theta >= 85. * DEGREE_TO_RAD && theta <= 95. * DEGREE_TO_RAD &&
			    ((phi >= 355. * DEGREE_TO_RAD && phi <= 360. * DEGREE_TO_RAD) ||
			     (phi >= 0. * DEGREE_TO_RAD && phi <= 5. * DEGREE_TO_RAD))) {
				return 1.;
			}

			return 0.;
		}

		// 0^+ -> 0^+ -> 0^+
		// Isotropic distribution
		if ((st[0] == 0. && st[1] == 0. && st[2] == 0.) ||
		    (st[0] == -0.1 && st[1] == -0.1 && st[2] == -0.1)) {
			return 1.;
		}

		// 0^+ -> 1^+ -> 0^+ or 0^- -> 1^- -> 0^-
		if ((st[0] == 0. && st[1] == 1. && st[2] == 0.) ||
		    (st[0] == -0.1 && st[1] == -1. && st[2] == -0.1)) {
			return 0.75 * (1 + pow(cos(theta), 2) +
			            pow(sin(theta), 2) * cos(2 * phi));
		}

		// 0^+ -> 1^- -> 0^+ or 0^- -> 1^- -> 0^-
		if ((st[0] == 0. && st[1] == -1. && st[2] == 0.) ||
		    (st[0] == -0.1 && st[1] == 1. && st[2] == -0.1)) {
			return 0.75 * (1 + pow(cos(theta), 2) -
			            pow(sin(theta), 2) * cos(2 * phi));
		}

		// 0^+ -> 2^+ -> 0^+ or 0^- -> 2^- -> 0^-
		if ((st[0] == 0. && st[1] == 2. && st[2] == 0.) ||
		    (st[0] == -0.1 && st[1] == -2. && st[2] == -0.1)) {
			return 0.625 * (2. + cos(2. * theta) + cos(4. * theta) -
			             2. * cos(2. * phi) * (1. + 2. * cos(2. * theta)) *
			                 pow(sin(theta), 2.));
		}

		// 0^+ -> 2^+ -> 2^+ or 0^- -> 2^- -> 2^-
		if ((st[0] == 0. && st[1] == 2. && st[2] == 2.) ||
		    (st[0] == -0.1 && st[1] == -2. && st[2] == -2.)) {
			return 1./(56.*(1. + mix[1]*mix[1]))*(
					49. - 20.4939*mix[1] + 65.*mix[1]*mix[1] + 
						pow(cos(theta), 2)*(21. + 61.4817*mix[1] + 5.*mix[1]*mix[1]*(-7. + 8.*cos(2.*theta))) +
						cos(2.*phi)*(21. + 61.4817*mix[1] - 5.*mix[1]*mix[1]*(7. + 8.*cos(2.*theta)))*pow(sin(theta), 2)
				);
		}

		// 0^+ -> 1^- -> 2^+ or 0^- -> 1^+ -> 2^-
		if ((st[0] == 0. && st[1] == -1. && st[2] == 2.) ||
		    (st[0] == -0.1 && st[1] == 1. && st[2] == -2.)) {

			return 1. + ((0.07071067811865475 + 0.9486832980505138*mix[1] + 0.35355339059327373*pow(mix[1],2))*
					      (1.0606601717798212*cos(2.*phi)*(-1. + pow(cos(theta),2)) + 0.35355339059327373*(-1. + 3.*pow(cos(theta),2))))/
				    (1. + pow(mix[1],2));
		}

		// 0^+ -> 1^+ -> 2^+ or 0^- -> 1^- -> 2^-
		if ((st[0] == 0. && st[1] == 1. && st[2] == 2.) ||
		    (st[0] == -0.1 && st[1] == -1. && st[2] == -2.)) {

			return 1. + ((0.07071067811865475 + 0.9486832980505138*mix[1] + 0.35355339059327373*pow(mix[1],2))*
					      (-1.0606601717798212*cos(2.*phi)*(-1. + pow(cos(theta),2)) + 0.35355339059327373*(-1. + 3.*pow(cos(theta),2))))/
				    (1. + pow(mix[1],2));
		}

        // 0^+ -> 1^- -> 1^p or 0^- -> 1^+ -> 1^p
        if (((st[0] == 0. && st[1] == -1.) || (st[0] == -0.1 && st[1] == 1.)) && std::abs(st[2]) == 1.) {
            return (pow(mix[1], 2) - 1.0/8.0*(pow(mix[1], 2) + 6*mix[1] + 1)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + 1)/(pow(mix[1], 2) + 1);
        }

		// 1.5^+ -> 2.5^- -> 1.5^+ or 1.5^- -> 2.5^+ -> 1.5^-
		if ((st[0] == 1.5 && st[1] == -2.5 && st[2] == 1.5) ||
		    (st[0] == -1.5 && st[1] == 1.5 && st[2] == -1.5)) {

			return ((1. + 0.9999999999999998*pow(mix[0],2))*(1. + 0.9999999999999998*pow(mix[1],2)) -
			      0.5*(0.37416573867739406 + (-1.8973665961010275 - 0.19090088708030317*mix[1])*mix[1])*
			            ((0.37416573867739406 + (1.8973665961010275 - 0.19090088708030317*mix[0])*mix[0])*(1. - 3.*pow(cos(theta),2)) +
				             0.5727026612409095*(-1.959999999999999 + mix[0]*(3.313004678535784 + 1.*mix[0]))*cos(2.*phi)*(-1. + pow(cos(theta),2))) -
				         0.31098153547133134*pow(mix[0],2)*pow(mix[1],2)*
					       (-0.6000000000000001 + 6.*pow(cos(theta),2) - 7.*pow(cos(theta),4) +
						        cos(2.*phi)*(1. - 8.*pow(cos(theta),2) + 7.*pow(cos(theta),4))))/((1. + pow(mix[0],2))*(1. + pow(mix[1],2)));
		}

		// 1.5^+ -> 2.5^+ -> 1.5^+ or 1.5^- -> 2.5^- -> 1.5^-
		if ((st[0] == 1.5 && st[1] == 2.5 && st[2] == 1.5) ||
		    (st[0] == -1.5 && st[1] == -2.5 && st[2] == -1.5)) {

			return ((1. + 0.9999999999999998*pow(mix[0],2))*(1. + 0.9999999999999998*pow(mix[1],2)) -
			      0.5*(0.37416573867739406 + (-1.8973665961010275 - 0.19090088708030317*mix[1])*mix[1])*
			            ((0.37416573867739406 + (1.8973665961010275 - 0.19090088708030317*mix[0])*mix[0])*(1. - 3.*pow(cos(theta),2)) -
				             0.5727026612409095*(-1.959999999999999 + mix[0]*(3.313004678535784 + 1.*mix[0]))*cos(2.*phi)*(-1. + pow(cos(theta),2))) +
				         0.31098153547133134*pow(mix[0],2)*pow(mix[1],2)*
					       (0.6000000000000001 - 6.*pow(cos(theta),2) + 7.*pow(cos(theta),4) +
						        cos(2.*phi)*(1. - 8.*pow(cos(theta),2) + 7.*pow(cos(theta),4))))/((1. + pow(mix[0],2))*(1. + pow(mix[1],2)));

		}

		// 1.5^+ -> 1.5^+ -> 1.5^+ or 1.5^- -> 1.5^- -> 1.5^-
		if ((st[0] == 1.5 && st[1] == 1.5 && st[2] == 1.5) ||
		    (st[0] == -1.5 && st[1] == -1.5 && st[2] == -1.5)) {

			return 1. + (0.04*(1. + 3.872983346207417*mix[1])*(-1.*(-1. + 3.872983346207417*mix[0])*(1. + 3.*cos(2.*theta)) +
						        2.*(3. + 3.872983346207417*mix[0])*cos(2.*phi)*pow(sin(theta),2)))/((1. + pow(mix[0],2))*(1. + pow(mix[1],2)));
		}

		// 1.5^+ -> 1.5^- -> 1.5^+ or 1.5^- -> 1.5^+ -> 1.5^-
		if ((st[0] == 1.5 && st[1] == -1.5 && st[2] == 1.5) ||
		    (st[0] == -1.5 && st[1] == 1.5 && st[2] == -1.5)) {

			return 1. + (0.04*(1. + 3.872983346207417*mix[1])*(-1.*(-1. + 3.872983346207417*mix[0])*(1. + 3.*cos(2.*theta)) -
						        2.*(3. + 3.872983346207417*mix[0])*cos(2.*phi)*pow(sin(theta),2)))/((1. + pow(mix[0],2))*(1. + pow(mix[1],2)));
		}

		// 0.5^- -> 1.5^- -> 0.5^- or 0.5^+ -> 1.5^+ -> 0.5^+
		if ((st[0] == -0.5 && st[1] == -1.5 && st[2] == -0.5) ||
		    (st[0] == 0.5 && st[1] == 1.5 && st[2] == 0.5)) {

			return 1. + (0.125*(-1. + 3.4641016151377544*mix[1] + pow(mix[1],2))*
					      (-1.*(1. + 3.4641016151377544*mix[0] - 1.*pow(mix[0],2))*(-1. + 3.*pow(cos(theta),2)) +
					               (-3. + 3.4641016151377544*mix[0] + 3.*pow(mix[0],2))*cos(2.*phi)*pow(sin(theta),2)))/
				    ((1. + pow(mix[0],2))*(1. + pow(mix[1],2)));
		}

		// 0.5^- -> 1.5^+ -> 0.5^- or 0.5^+ -> 1.5^- -> 0.5^+
		if ((st[0] == -0.5 && st[1] == 1.5 && st[2] == -0.5) ||
		    (st[0] == 0.5 && st[1] == -1.5 && st[2] == 0.5)) {

			return 1. - (0.125*(-1. + 3.4641016151377544*mix[1] + pow(mix[1],2))*
					      ((1. + 3.4641016151377544*mix[0] - 1.*pow(mix[0],2))*(-1. + 3.*pow(cos(theta),2)) +
					               (-3. + 3.4641016151377544*mix[0] + 3.*pow(mix[0],2))*cos(2.*phi)*pow(sin(theta),2)))/
				    ((1. + pow(mix[0],2))*(1. + pow(mix[1],2)));

		}

		// 2.5^+ -> 1.5^- -> 2.5^+ or 2.5^- -> 1.5^+ -> 2.5^-
		if ((st[0] == 2.5 && st[1] == -1.5 && st[2] == 2.5) ||
		    (st[0] == -2.5 && st[1] == +1.5 && st[2] == -2.5)) {

			return (0.5*(2.*(1.0000000000000002 + 1.*pow(mix[0],2))*(1.0000000000000002 + 1.*pow(mix[1],2)) -
			             1.*(0.10000000000000002 + (1.1832159566199234 + 0.3571428571428572*mix[1])*mix[1])*
				             ((0.10000000000000002 + (-1.1832159566199234 + 0.3571428571428572*mix[0])*mix[0])*(1. - 3.*pow(cos(theta),2)) -
					                1.0714285714285716*(0.28 + mix[0]*(1.1043348928452617 + 1.*mix[0]))*cos(2.*phi)*(-1. + pow(cos(theta),2)))))/
				   ((1. + pow(mix[0],2))*(1. + pow(mix[1],2)));

		}

		// 2.5^+ -> 1.5^+ -> 2.5^+ or 2.5^- -> 1.5^- -> 2.5^-
		if ((st[0] == 2.5 && st[1] == 1.5 && st[2] == 2.5) ||
		    (st[0] == -2.5 && st[1] == -1.5 && st[2] == -2.5)) {

			return (0.5*(2.*(1.0000000000000002 + 1.*pow(mix[0],2))*(1.0000000000000002 + 1.*pow(mix[1],2)) -
			             1.*(0.10000000000000002 + (1.1832159566199234 + 0.3571428571428572*mix[1])*mix[1])*
				             ((0.10000000000000002 + (-1.1832159566199234 + 0.3571428571428572*mix[0])*mix[0])*(1. - 3.*pow(cos(theta),2)) +
					                1.0714285714285716*(0.28 + mix[0]*(1.1043348928452617 + 1.*mix[0]))*cos(2.*phi)*(-1. + pow(cos(theta),2)))))/
				   ((1. + pow(mix[0],2))*(1. + pow(mix[1],2)));

		}
		
		// 2.5^+ -> 2.5^+ -> 2.5^+ or 2.5^- -> 2.5^- -> 2.5^-
		if ((st[0] == 2.5 && st[1] == 2.5 && st[2] == 2.5) ||
		    (st[0] == -2.5 && st[1] == -2.5 && st[2] == -2.5)) {

			return (1.0/2.0)*(14*pow(mix[0], 2)*pow(mix[1], 2)*(-0.014056643065389425*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 0.098396501457725979*pow(cos(theta), 4) - 0.08433985839233657*pow(cos(theta), 2) + 0.0084339858392336545) + 12*(0.40824829046386302*pow(mix[0], 2) + 0.40824829046386296)*(0.40824829046386302*pow(mix[1], 2) + 0.40824829046386296) + ((3*pow(cos(theta), 2) - 1)*(0.018630018962760751*sqrt(105)*pow(mix[0], 2) + 0.12121830534626531*sqrt(70)*mix[0] - 0.041731242476584086*sqrt(105)) + (0.055890056888282233*sqrt(105)*pow(mix[0], 2) - 0.12121830534626531*sqrt(70)*mix[0] - 0.12519372742975224*sqrt(105))*pow(sin(theta), 2)*cos(2*phi))*(0.018630018962760751*sqrt(105)*pow(mix[1], 2) - 0.12121830534626531*sqrt(70)*mix[1] - 0.041731242476584086*sqrt(105)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1))
				;

		}
		
		// 2.5^+ -> 2.5^- -> 2.5^+ or 2.5^- -> 2.5^+ -> 2.5^-
		if ((st[0] == 2.5 && st[1] == -2.5 && st[2] == 2.5) ||
		    (st[0] == -2.5 && st[1] == 2.5 && st[2] == -2.5)) {
	
				
			return (1.0/2.0)*(14*pow(mix[0], 2)*pow(mix[1], 2)*(0.19679300291545196*pow(sin(phi), 2)*pow(sin(theta), 4) - 0.16867971678467311*pow(sin(phi), 2)*pow(sin(theta), 2) - 0.028113286130778833*pow(sin(theta), 2) + 0.022490628904623076) + 12*(0.40824829046386302*pow(mix[0], 2) + 0.40824829046386296)*(0.40824829046386302*pow(mix[1], 2) + 0.40824829046386296) + ((3*pow(cos(theta), 2) - 1)*(0.018630018962760751*sqrt(105)*pow(mix[0], 2) + 0.12121830534626531*sqrt(70)*mix[0] - 0.041731242476584086*sqrt(105)) + (-0.055890056888282233*sqrt(105)*pow(mix[0], 2) + 0.12121830534626531*sqrt(70)*mix[0] + 0.12519372742975224*sqrt(105))*pow(sin(theta), 2)*cos(2*phi))*(0.018630018962760751*sqrt(105)*pow(mix[1], 2) - 0.12121830534626531*sqrt(70)*mix[1] - 0.041731242476584086*sqrt(105)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1));

		}
		
		// 2.5^+ -> 3.5^+ -> 2.5^+ or 2.5^- -> 3.5^- -> 2.5^-
		if ((st[0] == 2.5 && st[1] == 3.5 && st[2] == 2.5) ||
		    (st[0] == -2.5 && st[1] == -3.5 && st[2] == -2.5)) {

			return (1.0/2.0)*(308*pow(mix[0], 2)*pow(mix[1], 2)*(-0.0016454049495837645*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 0.011517834647086349*pow(cos(theta), 4) - 0.0098724296975025837*pow(cos(theta), 2) + 0.00098724296975025833) + 4*(0.70710678118654768*pow(mix[0], 2) + 0.70710678118654746)*(0.70710678118654768*pow(mix[1], 2) + 0.70710678118654746) + ((3*pow(cos(theta), 2) - 1)*(-0.0053780232315788759*sqrt(210)*pow(mix[0], 2) + 0.29160592175990219*sqrt(42)*mix[0] + 0.02258769757263128*sqrt(210)) + (-0.016134069694736623*sqrt(210)*pow(mix[0], 2) - 0.29160592175990208*sqrt(42)*mix[0] + 0.067763092717893825*sqrt(210))*pow(sin(theta), 2)*cos(2*phi))*(-0.0053780232315788759*sqrt(210)*pow(mix[1], 2) - 0.29160592175990219*sqrt(42)*mix[1] + 0.02258769757263128*sqrt(210)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)); 

		}

		// 2.5^+ -> 3.5^- -> 2.5^+ or 2.5^- -> 3.5^+ -> 2.5^-
		if ((st[0] == 2.5 && st[1] == -3.5 && st[2] == 2.5) ||
		    (st[0] == -2.5 && st[1] == 3.5 && st[2] == -2.5)) {

			return (1.0/2.0)*(308*pow(mix[0], 2)*pow(mix[1], 2)*(0.0016454049495837645*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 0.011517834647086349*pow(cos(theta), 4) - 0.0098724296975025837*pow(cos(theta), 2) + 0.00098724296975025833) + 4*(0.70710678118654768*pow(mix[0], 2) + 0.70710678118654746)*(0.70710678118654768*pow(mix[1], 2) + 0.70710678118654746) + ((3*pow(cos(theta), 2) - 1)*(-0.0053780232315788759*sqrt(210)*pow(mix[0], 2) + 0.29160592175990219*sqrt(42)*mix[0] + 0.02258769757263128*sqrt(210)) + (0.016134069694736623*sqrt(210)*pow(mix[0], 2) + 0.29160592175990208*sqrt(42)*mix[0] - 0.067763092717893825*sqrt(210))*pow(sin(theta), 2)*cos(2*phi))*(-0.0053780232315788759*sqrt(210)*pow(mix[1], 2) - 0.29160592175990219*sqrt(42)*mix[1] + 0.02258769757263128*sqrt(210)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1))
				; 

		}
		// 1^+ -> 2^+ -> 0^+ or 1^- -> 2^- -> 0^-
		if((st[0] == 1. && st[1] == 2. && st[2] == 0.) ||
		   (st[0] ==-1. && st[1] ==-2. && st[2] ==-0.)){
			return (80*pow(mix[0], 2)*pow(sin(theta), 2)*cos(2*phi)*pow(cos(theta), 2) - 5*pow(mix[0], 2)*pow(sin(theta), 2)*cos(2*phi) - 80*pow(mix[0], 2)*pow(cos(theta), 4) + 75*pow(mix[0], 2)*pow(cos(theta), 2) + 15*pow(mix[0], 2) + 6*sqrt(5)*mix[0]*pow(sin(theta), 2)*cos(2*phi) - 18*sqrt(5)*mix[0]*pow(cos(theta), 2) + 6*sqrt(5)*mix[0] - 9*pow(sin(theta), 2)*cos(2*phi) - 9*pow(cos(theta), 2) + 27)/(24*pow(mix[0], 2) + 24);
		}
		// 1^- -> 2^+ -> 0^+ or 1^+ -> 2^- -> 0^-
		if((st[0] ==-1. && st[1] == 2. && st[2] == 0.) ||
		   (st[0] == 1. && st[1] ==-2. && st[2] ==-0.)){
			return (1.0/11760.0)*(1120*pow(mix[0], 2)*(-70*pow(sin(phi), 2)*pow(sin(theta), 4) + 60*pow(sin(phi), 2)*pow(sin(theta), 2) + 10*pow(sin(theta), 2) - 8) + 11760*pow(mix[0], 2) - 3*sqrt(70)*((3*pow(cos(theta), 2) - 1)*(-5*sqrt(70)*pow(mix[0], 2) + 70*sqrt(14)*mix[0] + 7*sqrt(70)) + (15*sqrt(70)*pow(mix[0], 2) + 70*sqrt(14)*mix[0] - 21*sqrt(70))*pow(sin(theta), 2)*cos(2*phi)) + 11760)/(pow(mix[0], 2) + 1);
		}

    } else if (nst == 4) {
        // 0^+ → 1^- → 0 → 1
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 0 → 2
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 0 → 3
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 0 → 4
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 0 → 5
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 0 → 6
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 1 → 0
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 0.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return (pow(mix[1], 2) + (1.0/40.0)*(pow(mix[1], 2) - 5)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + 1)/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 1 → 1
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return (-1.0/80.0*(pow(mix[1], 2) - 5)*(pow(mix[2], 2) + 6*mix[2] + 1)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 1 → 2
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((1.0/800.0)*M_SQRT2*(pow(mix[1], 2) - 5)*(5*M_SQRT2*pow(mix[2], 2) + 6*sqrt(10)*mix[2] + M_SQRT2)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 1 → 3
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((1.0/2240.0)*M_SQRT2*(pow(mix[1], 2) - 5)*(21*M_SQRT2*pow(mix[2], 2) + 16*sqrt(7)*mix[2] - 4*M_SQRT2)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 1 → 4
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((1.0/1600.0)*M_SQRT2*(pow(mix[1], 2) - 5)*(17*M_SQRT2*pow(mix[2], 2) + 10*sqrt(6)*mix[2] - 5*M_SQRT2)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 1 → 5
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((1.0/8800.0)*M_SQRT2*(pow(mix[1], 2) - 5)*(99*M_SQRT2*pow(mix[2], 2) + 24*sqrt(22)*mix[2] - 34*M_SQRT2)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 1 → 6
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((1.0/14560.0)*M_SQRT2*(pow(mix[1], 2) - 5)*(169*M_SQRT2*pow(mix[2], 2) + 14*sqrt(130)*mix[2] - 63*M_SQRT2)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 2 → 0
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 0.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return (pow(mix[1], 2) + (1.0/8.0)*(pow(mix[1], 2) - 1)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + 1)/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 2 → 1
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((1.0/5600.0)*sqrt(70)*(pow(mix[1], 2) - 1)*(5*sqrt(70)*pow(mix[2], 2) + 70*sqrt(14)*mix[2] - 7*sqrt(70))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 2 → 2
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((1.0/39200.0)*sqrt(70)*(pow(mix[1], 2) - 1)*(-15*sqrt(70)*pow(mix[2], 2) + 490*sqrt(6)*mix[2] + 49*sqrt(70))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 2 → 3
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return (-1.0/19600.0*sqrt(70)*(pow(mix[1], 2) - 1)*(20*sqrt(70)*pow(mix[2], 2) + 140*sqrt(21)*mix[2] + 7*sqrt(70))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 2 → 4
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return (-1.0/15680.0*sqrt(70)*(pow(mix[1], 2) - 1)*(21*sqrt(70)*pow(mix[2], 2) + 280*M_SQRT2*mix[2] - 8*sqrt(70))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 2 → 5
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return (-1.0/12320.0*sqrt(70)*(pow(mix[1], 2) - 1)*(17*sqrt(70)*pow(mix[2], 2) + 66*sqrt(14)*mix[2] - 11*sqrt(70))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 2 → 6
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return (-1.0/800800.0*sqrt(70)*(pow(mix[1], 2) - 1)*(1089*sqrt(70)*pow(mix[2], 2) + 728*sqrt(330)*mix[2] - 884*sqrt(70))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 3 → 0
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 0.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return (pow(mix[1], 2) + (1.0/80.0)*(15*pow(mix[1], 2) - 12)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + 1)/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 3 → 1
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/2240.0)*sqrt(3)*(5*pow(mix[1], 2) - 4)*(21*sqrt(3)*pow(mix[2], 2) + 8*sqrt(42)*mix[2] + 16*sqrt(3))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 3 → 2
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/2800.0)*sqrt(3)*(5*pow(mix[1], 2) - 4)*(5*sqrt(3)*pow(mix[2], 2) + 42*sqrt(10)*mix[2] - 14*sqrt(3))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 3 → 3
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/1120.0)*(5*pow(mix[1], 2) - 4)*(-11*pow(mix[2], 2) + 42*mix[2] + 21)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 3 → 4
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/1120.0*(5*pow(mix[1], 2) - 4)*(15*pow(mix[2], 2) + 70*mix[2] + 7)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 3 → 5
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/1344.0*sqrt(3)*(5*pow(mix[1], 2) - 4)*(7*sqrt(3)*pow(mix[2], 2) + 8*sqrt(21)*mix[2] - 4*sqrt(3))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 3 → 6
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/10560.0*sqrt(3)*(5*pow(mix[1], 2) - 4)*(51*sqrt(3)*pow(mix[2], 2) + 22*sqrt(105)*mix[2] - 55*sqrt(3))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 4 → 0
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 0.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return (pow(mix[1], 2) + (1.0/560.0)*(119*pow(mix[1], 2) - 85)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1) + 1)/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 4 → 1
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/862400.0)*sqrt(77)*(7*pow(mix[1], 2) - 5)*(289*sqrt(77)*pow(mix[2], 2) + 110*sqrt(231)*mix[2] + 275*sqrt(77))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 4 → 2
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/109760.0)*sqrt(77)*(7*pow(mix[1], 2) - 5)*(21*sqrt(77)*pow(mix[2], 2) + 56*sqrt(55)*mix[2] + 20*sqrt(77))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 4 → 3
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (11.0/7840.0)*(7*pow(mix[1], 2) - 5)*(pow(mix[2], 2) + 42*mix[2] - 7)*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 4 → 4
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/3018400.0)*sqrt(77)*(7*pow(mix[1], 2) - 5)*(-325*sqrt(77)*pow(mix[2], 2) + 3234*sqrt(5)*mix[2] + 539*sqrt(77))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 4 → 5
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/215600.0*sqrt(77)*(7*pow(mix[1], 2) - 5)*(25*sqrt(77)*pow(mix[2], 2) + 42*sqrt(770)*mix[2] + 14*sqrt(77))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^- → 4 → 6
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == -1.0) ||
             (st[0] == -0.1 && st[1] == 1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/172480.0*sqrt(77)*(7*pow(mix[1], 2) - 5)*(21*sqrt(77)*pow(mix[2], 2) + 56*sqrt(154)*mix[2] - 16*sqrt(77))*(-3*pow(sin(theta), 2)*cos(2*phi) + 3*pow(cos(theta), 2) - 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 0 → 1
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 0 → 2
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 0 → 3
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 0 → 4
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 0 → 5
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 0 → 6
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 1 → 0
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 0.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return (pow(mix[1], 2) + (1.0/40.0)*(pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2) + 1)/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 1 → 1
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return (-1.0/80.0*(pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(pow(mix[2], 2) + 6*mix[2] + 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 1 → 2
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((1.0/800.0)*M_SQRT2*(pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(5*M_SQRT2*pow(mix[2], 2) + 6*sqrt(10)*mix[2] + M_SQRT2) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 1 → 3
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((1.0/2240.0)*M_SQRT2*(pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(21*M_SQRT2*pow(mix[2], 2) + 16*sqrt(7)*mix[2] - 4*M_SQRT2) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 1 → 4
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((1.0/1600.0)*M_SQRT2*(pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(17*M_SQRT2*pow(mix[2], 2) + 10*sqrt(6)*mix[2] - 5*M_SQRT2) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 1 → 5
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((1.0/8800.0)*M_SQRT2*(pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(99*M_SQRT2*pow(mix[2], 2) + 24*sqrt(22)*mix[2] - 34*M_SQRT2) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 1 → 6
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((1.0/14560.0)*M_SQRT2*(pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(169*M_SQRT2*pow(mix[2], 2) + 14*sqrt(130)*mix[2] - 63*M_SQRT2) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 2 → 0
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 0.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return (pow(mix[1], 2) + (1.0/8.0)*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2) + 1)/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 2 → 1
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((1.0/5600.0)*sqrt(70)*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(5*sqrt(70)*pow(mix[2], 2) + 70*sqrt(14)*mix[2] - 7*sqrt(70)) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 2 → 2
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((1.0/39200.0)*sqrt(70)*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(-15*sqrt(70)*pow(mix[2], 2) + 490*sqrt(6)*mix[2] + 49*sqrt(70)) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 2 → 3
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return (-1.0/19600.0*sqrt(70)*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(20*sqrt(70)*pow(mix[2], 2) + 140*sqrt(21)*mix[2] + 7*sqrt(70)) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 2 → 4
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return (-1.0/15680.0*sqrt(70)*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(21*sqrt(70)*pow(mix[2], 2) + 280*M_SQRT2*mix[2] - 8*sqrt(70)) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 2 → 5
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return (-1.0/12320.0*sqrt(70)*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(17*sqrt(70)*pow(mix[2], 2) + 66*sqrt(14)*mix[2] - 11*sqrt(70)) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 2 → 6
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return (-1.0/800800.0*sqrt(70)*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(1089*sqrt(70)*pow(mix[2], 2) + 728*sqrt(330)*mix[2] - 884*sqrt(70)) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 3 → 0
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 0.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return (pow(mix[1], 2) + (1.0/80.0)*(15*pow(mix[1], 2) - 12)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2) + 1)/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 3 → 1
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/2240.0)*sqrt(3)*(5*pow(mix[1], 2) - 4)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(21*sqrt(3)*pow(mix[2], 2) + 8*sqrt(42)*mix[2] + 16*sqrt(3)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 3 → 2
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/2800.0)*sqrt(3)*(5*pow(mix[1], 2) - 4)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(5*sqrt(3)*pow(mix[2], 2) + 42*sqrt(10)*mix[2] - 14*sqrt(3)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 3 → 3
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/1120.0)*(5*pow(mix[1], 2) - 4)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(-11*pow(mix[2], 2) + 42*mix[2] + 21))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 3 → 4
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/1120.0*(5*pow(mix[1], 2) - 4)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(15*pow(mix[2], 2) + 70*mix[2] + 7))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 3 → 5
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/1344.0*sqrt(3)*(5*pow(mix[1], 2) - 4)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(7*sqrt(3)*pow(mix[2], 2) + 8*sqrt(21)*mix[2] - 4*sqrt(3)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 3 → 6
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/10560.0*sqrt(3)*(5*pow(mix[1], 2) - 4)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(51*sqrt(3)*pow(mix[2], 2) + 22*sqrt(105)*mix[2] - 55*sqrt(3)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 4 → 0
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 0.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return (pow(mix[1], 2) + (1.0/560.0)*(119*pow(mix[1], 2) - 85)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2) + 1)/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 4 → 1
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/862400.0)*sqrt(77)*(7*pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(289*sqrt(77)*pow(mix[2], 2) + 110*sqrt(231)*mix[2] + 275*sqrt(77)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 4 → 2
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/109760.0)*sqrt(77)*(7*pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(21*sqrt(77)*pow(mix[2], 2) + 56*sqrt(55)*mix[2] + 20*sqrt(77)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 4 → 3
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (11.0/7840.0)*(7*pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(pow(mix[2], 2) + 42*mix[2] - 7))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 4 → 4
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/3018400.0)*sqrt(77)*(7*pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(-325*sqrt(77)*pow(mix[2], 2) + 3234*sqrt(5)*mix[2] + 539*sqrt(77)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 4 → 5
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/215600.0*sqrt(77)*(7*pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(25*sqrt(77)*pow(mix[2], 2) + 42*sqrt(770)*mix[2] + 14*sqrt(77)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 1^+ → 4 → 6
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == 1.0) ||
             (st[0] == -0.1 && st[1] == -1.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/172480.0*sqrt(77)*(7*pow(mix[1], 2) - 5)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(21*sqrt(77)*pow(mix[2], 2) + 56*sqrt(154)*mix[2] - 16*sqrt(77)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 0 → 1
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 0 → 2
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 0 → 3
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 0 → 4
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 0 → 5
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 0 → 6
        if ((std::abs(st[2]) == 0.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return 1/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 1 → 0
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 0.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return (pow(mix[1], 2) + (1.0/8.0)*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2) + 1)/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 1 → 1
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return (-1.0/16.0*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(pow(mix[2], 2) + 6*mix[2] + 1) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 1 → 2
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((1.0/160.0)*M_SQRT2*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(5*M_SQRT2*pow(mix[2], 2) + 6*sqrt(10)*mix[2] + M_SQRT2) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 1 → 3
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((1.0/448.0)*M_SQRT2*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(21*M_SQRT2*pow(mix[2], 2) + 16*sqrt(7)*mix[2] - 4*M_SQRT2) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 1 → 4
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((1.0/320.0)*M_SQRT2*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(17*M_SQRT2*pow(mix[2], 2) + 10*sqrt(6)*mix[2] - 5*M_SQRT2) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 1 → 5
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((1.0/1760.0)*M_SQRT2*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(99*M_SQRT2*pow(mix[2], 2) + 24*sqrt(22)*mix[2] - 34*M_SQRT2) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 1 → 6
        if ((std::abs(st[2]) == 1.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((1.0/2912.0)*M_SQRT2*(pow(mix[1], 2) - 1)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(169*M_SQRT2*pow(mix[2], 2) + 14*sqrt(130)*mix[2] - 63*M_SQRT2) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 2 → 0
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 0.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return (1.0/1176.0)*(1176*pow(mix[1], 2) + (-45*pow(mix[1], 2) + 105)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2) + (48*pow(mix[1], 2) - 112)*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3) + 1176)/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 2 → 1
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return (-4.0/441.0*pow(mix[2], 2)*(3*pow(mix[1], 2) - 7)*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/54880.0*sqrt(70)*(3*pow(mix[1], 2) - 7)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(5*sqrt(70)*pow(mix[2], 2) + 70*sqrt(14)*mix[2] - 7*sqrt(70)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 2 → 2
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((4.0/1029.0)*pow(mix[2], 2)*(3*pow(mix[1], 2) - 7)*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/384160.0*sqrt(70)*(3*pow(mix[1], 2) - 7)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(-15*sqrt(70)*pow(mix[2], 2) + 490*sqrt(6)*mix[2] + 49*sqrt(70)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 2 → 3
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return (-1.0/1029.0*pow(mix[2], 2)*(3*pow(mix[1], 2) - 7)*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/192080.0)*sqrt(70)*(3*pow(mix[1], 2) - 7)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(20*sqrt(70)*pow(mix[2], 2) + 140*sqrt(21)*mix[2] + 7*sqrt(70)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 2 → 4
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/153664.0)*sqrt(70)*(3*pow(mix[1], 2) - 7)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(21*sqrt(70)*pow(mix[2], 2) + 280*M_SQRT2*mix[2] - 8*sqrt(70)) + (1.0/259308.0)*sqrt(14)*(3*pow(mix[1], 2) - 7)*(7*sqrt(14)*pow(mix[2], 2) + 35*sqrt(10)*mix[2] + 2*sqrt(14))*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 2 → 5
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/120736.0)*sqrt(70)*(3*pow(mix[1], 2) - 7)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(17*sqrt(70)*pow(mix[2], 2) + 66*sqrt(14)*mix[2] - 11*sqrt(70)) + (1.0/271656.0)*sqrt(14)*(3*pow(mix[1], 2) - 7)*(27*sqrt(14)*pow(mix[2], 2) + 18*sqrt(70)*mix[2] - sqrt(14))*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 2 → 6
        if ((std::abs(st[2]) == 2.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/7847840.0)*sqrt(70)*(3*pow(mix[1], 2) - 7)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(1089*sqrt(70)*pow(mix[2], 2) + 728*sqrt(330)*mix[2] - 884*sqrt(70)) + (1.0/588588.0)*sqrt(14)*(3*pow(mix[1], 2) - 7)*(88*sqrt(14)*pow(mix[2], 2) + 42*sqrt(66)*mix[2] - 9*sqrt(14))*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 3 → 0
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 0.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return (1.0/168.0)*(168*pow(mix[1], 2) + (3*pow(mix[1], 2) - 2)*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3) + (9*pow(mix[1], 2) + 36)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2) + 168)/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 3 → 1
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/1568.0)*sqrt(3)*(pow(mix[1], 2) + 4)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(21*sqrt(3)*pow(mix[2], 2) + 8*sqrt(42)*mix[2] + 16*sqrt(3)) + (1.0/155232.0)*sqrt(22)*(3*pow(mix[1], 2) - 2)*(7*sqrt(22)*pow(mix[2], 2) + 220*sqrt(77)*mix[2] - 88*sqrt(22))*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 3 → 2
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((11.0/588.0)*pow(mix[2], 2)*(3*pow(mix[1], 2) - 2)*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/1960.0)*sqrt(3)*(pow(mix[1], 2) + 4)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(5*sqrt(3)*pow(mix[2], 2) + 42*sqrt(10)*mix[2] - 14*sqrt(3)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 3 → 3
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return (-11.0/882.0*pow(mix[2], 2)*(3*pow(mix[1], 2) - 2)*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/784.0)*(pow(mix[1], 2) + 4)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(-11*pow(mix[2], 2) + 42*mix[2] + 21))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 3 → 4
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((11.0/2646.0)*pow(mix[2], 2)*(3*pow(mix[1], 2) - 2)*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/784.0*(pow(mix[1], 2) + 4)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(15*pow(mix[2], 2) + 70*mix[2] + 7))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 3 → 5
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return (1.0/1707552.0)*(1707552*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1815*sqrt(3)*(pow(mix[1], 2) + 4)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(7*sqrt(3)*pow(mix[2], 2) + 8*sqrt(21)*mix[2] - 4*sqrt(3)) - sqrt(22)*(3*pow(mix[1], 2) - 2)*(119*sqrt(22)*pow(mix[2], 2) + 220*sqrt(154)*mix[2] + 44*sqrt(22))*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 3 → 6
        if ((std::abs(st[2]) == 3.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/7392.0*sqrt(3)*(pow(mix[1], 2) + 4)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(51*sqrt(3)*pow(mix[2], 2) + 22*sqrt(105)*mix[2] - 55*sqrt(3)) - 1.0/1057056.0*sqrt(22)*(3*pow(mix[1], 2) - 2)*(261*sqrt(22)*pow(mix[2], 2) + 78*sqrt(770)*mix[2] - 13*sqrt(22))*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 4 → 0
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 0.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return (1.0/784.0)*(784*pow(mix[1], 2) + (17*pow(mix[1], 2) + 170)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2) + (36*pow(mix[1], 2) - 18)*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3) + 784)/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 4 → 1
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 1.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/1207360.0)*sqrt(77)*(pow(mix[1], 2) + 10)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(289*sqrt(77)*pow(mix[2], 2) + 110*sqrt(231)*mix[2] + 275*sqrt(77)) + (1.0/4708704.0)*sqrt(2002)*(2*pow(mix[1], 2) - 1)*(27*sqrt(2002)*pow(mix[2], 2) + 78*sqrt(6006)*mix[2] + 13*sqrt(2002))*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 4 → 2
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 2.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + (1.0/153664.0)*sqrt(77)*(pow(mix[1], 2) + 10)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(21*sqrt(77)*pow(mix[2], 2) + 56*sqrt(55)*mix[2] + 20*sqrt(77)) - 1.0/7606368.0*sqrt(2002)*(2*pow(mix[1], 2) - 1)*(7*sqrt(2002)*pow(mix[2], 2) - 308*sqrt(1430)*mix[2] + 44*sqrt(2002))*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 4 → 3
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 3.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return (1.0/98784.0)*(2288*pow(mix[2], 2)*(2*pow(mix[1], 2) - 1)*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3) + 98784*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + 99*(pow(mix[1], 2) + 10)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(pow(mix[2], 2) + 42*mix[2] - 7))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 4 → 4
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 4.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return (1.0/4225760.0)*(-80080*pow(mix[2], 2)*(2*pow(mix[1], 2) - 1)*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3) + 4225760*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) + sqrt(77)*(pow(mix[1], 2) + 10)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(-325*sqrt(77)*pow(mix[2], 2) + 3234*sqrt(5)*mix[2] + 539*sqrt(77)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 4 → 5
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 5.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((13.0/1764.0)*pow(mix[2], 2)*(2*pow(mix[1], 2) - 1)*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3) + (pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/301840.0*sqrt(77)*(pow(mix[1], 2) + 10)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(25*sqrt(77)*pow(mix[2], 2) + 42*sqrt(770)*mix[2] + 14*sqrt(77)))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
        // 0^+ → 2^+ → 4 → 6
        if ((std::abs(st[2]) == 4.0 && std::abs(st[3]) == 6.0) &&
            ((st[0] == 0. && st[1] == 2.0) ||
             (st[0] == -0.1 && st[1] == -2.0))) {
             
            return ((pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1) - 1.0/241472.0*sqrt(77)*(pow(mix[1], 2) + 10)*(-6*pow(sin(phi), 2)*pow(sin(theta), 2) + 2)*(21*sqrt(77)*pow(mix[2], 2) + 56*sqrt(154)*mix[2] - 16*sqrt(77)) - 1.0/155387232.0*sqrt(2002)*(2*pow(mix[1], 2) - 1)*(203*sqrt(2002)*pow(mix[2], 2) + 1540*sqrt(1001)*mix[2] + 88*sqrt(2002))*(-5*(7*pow(cos(theta), 2) - 1)*pow(sin(theta), 2)*cos(2*phi) + 35*pow(cos(theta), 4) - 30*pow(cos(theta), 2) + 3))/((pow(mix[0], 2) + 1)*(pow(mix[1], 2) + 1)*(pow(mix[2], 2) + 1));
        }
    } 
    cout << "Warning: AngularDistributionGenerator:: Required spin sequence not found." << endl;
    return 0.;
}
