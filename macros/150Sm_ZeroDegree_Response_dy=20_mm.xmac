#!/usr/bin/env utrwrapper.py
## An (utrwrapper.py) extended macro starts with a configuration header embedded in comment lines (preceded by a single '#')
## For real comment lines in the header use multiple '#'s
## Run utrwrapper.py -h for a list of all available configuration options and their effects

#[generalConfig]
#outputDir=output/150Sm_ZeroDegree_Response_dy=20_mm
#ensureTerminalMultiplexer=True

#[environmentVariables]
#filenamePrefix=150Sm_ZeroDegree_Response_
#filenameSuffix=_keV_dy=20_mm_n=100000000
#beamOnStatistics=100000000      # In Udo's response matrices 50000000 statistics
#filenameTemplate={filenamePrefix}{loopVar}{filenameSuffix}
#setterCmd=/gps/ene/mono {loopVar} keV

#[utrBuildOptions]
#CAMPAIGN=Campaign_2014_2015
#DETECTOR_CONSTRUCTION=150Sm
#ZERODEGREE_OFFSET=20
#USE_TARGETS=ON
#GENERATOR_ANGCORR=OFF
#GENERATOR_ANGDIST=OFF

#[getHistogramArgs]
#maxenergy=4
#maxid=4

#[histogramToTxtArgs]
#begin=0
#end=0

## The required magic string signals the end of the configuration header
#START_OF_MACRO

# Never simulate more than 2^32= 4294967296 particles using /run/beamOn, since this causes an overflow in the random number seed, giving you in principle the same results over and over again.
# In such cases execute the same simulation multiple times instead.
/control/getEnv beamOnStatistics

# Get the filenamePrefix and filenameSuffix variables defined in the configuration header as GEANT4 aliases
/control/getEnv filenamePrefix
/control/getEnv filenameSuffix

# Disable appendage of additional IDs to filenames (as unique filenames containing the simulated energy will be used for each beamOn)
/utr/setUseFilenameID False
# Set the number of required decimal places for padding of loopVar (no padding here as loopVar only takes integer values)
/control/alias appendZerosToVarPadding -1



# Do the usual initialization steps for an efficiency simulation
/run/initialize

/gps/particle gamma
/gps/pos/type Beam
/gps/pos/shape Circle
/gps/pos/radius 12.7 mm
/gps/pos/centre 0. 0. -4000. mm
/gps/direction 0. 0. 1.
/gps/polarization 1. 0. 0.
/gps/ene/type Mono



# Run the generic macro in a loop
# loop Syntax: /control/loop MacroFile Variable Start End Increment
# for each Syntax: /control/foreach MacroFile Variable ValueList
# To use the variable in the macro to be looped refer to it wrapped in {} as {Variable} in the macro
# Remember that due to the numerical inaccuracies when adding float numbers, a loop might generate a run more or less than expected!
/control/foreach macros/examples/genericLoopable.mac loopVar 500 1000 1500 2000 2200 2400 2500 2600 2700 2800 2900 2950 3000 3050 3100 3150 3200 3250 3300 3500
