#!/usr/bin/env utrwrapper.py
## An (utrwrapper.py) extended macro starts with a configuration header embedded in comment lines (preceded by a single '#')
## For real comment lines in the header use multiple '#'s
## Run utrwrapper.py -h for a list of all available configuration options and their effects

#[generalConfig]
#outputDir=output/150Sm_AngDist_1990_keV_1-_1-_delta
#ensureTerminalMultiplexer=True

#[environmentVariables]
#filenamePrefix=150Sm_AngDist_1990_keV_1-_1-_delta=
## ≈ 0.00711h per 1 000 000 counts @ 3113 & 2373 keV AngDist
## ≈ 0.96MB   per 1 000 000 counts @ 3113 & 2373 keV AngDist
#filenameSuffix=_n=80000000
#beamOnStatistics=80000000
#filenameTemplate={filenamePrefix}{loopVar}{filenameSuffix}
#setterCmd=/ang/delta23 {loopVar}

#[utrBuildOptions]
#CAMPAIGN=Campaign_2014_2015
#DETECTOR_CONSTRUCTION=150Sm
#ZERODEGREE_OFFSET=30
#USE_TARGETS=ON
#GENERATOR_ANGCORR=OFF
#GENERATOR_ANGDIST=ON

#[getHistogramArgs]
#maxenergy=4
#maxid=4

#[histogramToTxtArgs]
#begin=1
#end=4

## The required magic string signals the end of the configuration header
#START_OF_MACRO

# Never simulate more than 2^32= 4294967296 particles using /run/beamOn, since this causes an overflow in the random number seed, giving you in principle the same results over and over again.
# In such cases execute the same simulation multiple times instead.
/control/getEnv beamOnStatistics

# Get the filenamePrefix and filenameSuffix variables defined in the configuration header as GEANT4 aliases
/control/getEnv filenamePrefix
/control/getEnv filenameSuffix

# Disable appendage of additional IDs to filenames (as unique filenames containing the simulated energy will be used for each beamOn)
/utr/setUseFilenameID False
# Set the number of required decimal places for padding of loopVar
/control/alias appendZerosToVarPadding 2



# Do the usual initialization steps for an angular distribution simulation
/run/initialize

/ang/particle gamma
/ang/energy 1990 keV

/ang/nstates 3
/ang/state1 0.
/ang/state2 -1.
/ang/state3 -1.
/ang/polarized true

/ang/delta12 0.
#Looped: /ang/delta23 0.

# Determine the position of the source.
/ang/sourceX 0. mm
/ang/sourceY 0. mm
/ang/sourceZ 0. mm
#/ang/sourceZ 0. mm # Ideal position of gamma3 target in all geometries
#/ang/sourceZ 1574.80 mm # Ideal position of 2nd target in generation '18 geometries
#/ang/sourceZ 1612.10 mm # Ideal position of 2nd target in generation '16/17 geometries

# Determine the dimensions of the envelope box. Random numbers will be sampled in the 
# intervals [-0.5*sourceDX, 0.5*sourceDX], [-0.5*sourceDY, 0.5*sourceDY], and
# [-0.5*sourceDZ, 0.5*sourceDZ].
/ang/sourceDX 20. mm
/ang/sourceDY 20. mm
/ang/sourceDZ 2. mm

# Set the name of a physical volume that should act as a source.
/ang/sourcePV Sm150_Target



# Run the generic macro in a loop
# loop Syntax: /control/loop MacroFile Variable Start End Increment
# for each Syntax: /control/foreach MacroFile Variable ValueList
# To use the variable in the macro to be looped refer to it wrapped in {} as {Variable} in the macro
# Remember that due to the numerical inaccuracies when adding float numbers, a loop might generate a run more or less than expected!

# Mathematica: With[{posRange=Join[Range[0,0.4,0.05],Range[0,1,0.1],Range[1,2,0.2],Range[2,14,0.5],Range[14,20,2],Range[20,50,5]]},Fold[#1<>" "<>ToString[#2]&,"",Union[posRange,-posRange,SameTest->Equal]]]
/control/foreach macros/examples/genericLoopable.mac loopVar  -50 -45 -40 -35 -30 -25 -20 -18 -16 -14 -13.5 -13. -12.5 -12. -11.5 -11. -10.5 -10. -9.5 -9. -8.5 -8. -7.5 -7. -6.5 -6. -5.5 -5. -4.5 -4. -3.5 -3. -2.5 -2. -1.8 -1.6 -1.4 -1.2 -1. -0.9 -0.8 -0.7 -0.6 -0.5 -0.4 -0.35 -0.3 -0.25 -0.2 -0.15 -0.1 -0.05 0. 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.5 0.6 0.7 0.8 0.9 1. 1.2 1.4 1.6 1.8 2. 2.5 3. 3.5 4. 4.5 5. 5.5 6. 6.5 7. 7.5 8. 8.5 9. 9.5 10. 10.5 11. 11.5 12. 12.5 13. 13.5 14 16 18 20 25 30 35 40 45 50